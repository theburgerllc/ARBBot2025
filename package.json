{
  "name": "arbbot2025-enhanced",
  "version": "4.0.0",
  "description": "Production-ready MEV arbitrage bot with institutional-grade optimization",
  "main": "scripts/run-bot.ts",
  "scripts": {
    "compile": "hardhat compile",
    "build": "tsc",
    "clean": "hardhat clean",
    "test": "hardhat test",
    "test:unit": "hardhat test test/FlashLoan.test.ts",
    "test:enhanced": "hardhat test test/EnhancedArbitrage.test.ts",
    "test:integration": "hardhat test test/Integration.test.ts",
    "test:bot": "hardhat test test/run-bot.test.ts",
    "test:aave-arb": "hardhat test test/aave-arb.test.ts",
    "test:triangular": "hardhat test test/EnhancedArbitrage.test.ts --grep 'Triangular'",
    "test:crosschain": "hardhat test test/run-bot.test.ts --grep 'Cross-Chain'",
    "test:flashbots": "hardhat test test/run-bot.test.ts --grep 'Flashbots'",
    "test:mev": "hardhat test test/run-bot.test.ts --grep 'MEV'",
    "test:arb": "hardhat test test/arb-simulation.test.ts --network hardhat",
    "test:arb-fork": "hardhat test test/arb-simulation.test.ts --network hardhat_arbitrum",
    "test:integration-fork": "hardhat test --network hardhat_arbitrum",
    "test:coverage": "hardhat coverage",
    "test:gas": "REPORT_GAS=true hardhat test",
    "deploy:arb": "hardhat run scripts/deploy-arb.ts --network arbitrum",
    "deploy:opt": "hardhat run scripts/deploy-multichain.ts --network optimism",
    "deploy:arb-sepolia": "hardhat run scripts/deploy-multichain.ts --network arbitrum_sepolia",
    "deploy:opt-sepolia": "hardhat run scripts/deploy-multichain.ts --network optimism_sepolia",
    "deploy:local": "hardhat run scripts/deploy-multichain.ts --network localhost",
    "deploy:local:arb": "hardhat run scripts/deploy-multichain.ts --network hardhat_arbitrum",
    "deploy:local:opt": "hardhat run scripts/deploy-multichain.ts --network hardhat_optimism",
    "deploy:verify:arb": "hardhat verify --network arbitrum",
    "deploy:verify:opt": "hardhat verify --network optimism",
    "deploy:verify:arb-sepolia": "hardhat verify --network arbitrum_sepolia",
    "deploy:verify:opt-sepolia": "hardhat verify --network optimism_sepolia",
    "bot:start": "ts-node scripts/run-bot.ts",
    "bot:run": "ts-node scripts/run-bot.ts",
    "bot:simulate": "ENABLE_SIMULATION_MODE=true ts-node scripts/run-bot.ts",
    "bot:multichain": "ENABLE_CROSS_CHAIN_MONITORING=true ts-node scripts/run-bot.ts",
    "bot:triangular": "ENABLE_TRIANGULAR_ARBITRAGE=true ts-node scripts/run-bot.ts",
    "bot:full": "ENABLE_CROSS_CHAIN_MONITORING=true ENABLE_TRIANGULAR_ARBITRAGE=true ts-node scripts/run-bot.ts",
    "bot:debug": "DEBUG_MODE=true VERBOSE_LOGGING=true ts-node scripts/run-bot.ts",
    "bot:dry-run": "ENABLE_SIMULATION_MODE=true VERBOSE_LOGGING=true ts-node scripts/run-bot.ts",
    "bot:dry": "ts-node scripts/run-bot.ts --simulate",
    "bot:dry-verbose": "ts-node scripts/run-bot.ts --simulate --verbose",
    "bot:parallel": "ts-node scripts/run-bot-parallel.ts",
    "bot:parallel:simulate": "ts-node scripts/run-bot-parallel.ts --simulate --verbose",
    "bot:parallel:test": "ts-node scripts/run-bot-parallel.ts --simulate --verbose --duration 600 --workers 4",
    "simulate:flashbots:parallel": "ts-node scripts/simulate-flashbots-parallel.ts",
    "bot:arbitrum": "ENABLE_CROSS_CHAIN_MONITORING=false ts-node scripts/run-bot.ts",
    "bot:optimism": "ENABLE_CROSS_CHAIN_MONITORING=false ts-node scripts/run-bot.ts",
    "bot:high-gas": "MAX_PRIORITY_FEE=5 ts-node scripts/run-bot.ts",
    "bot:conservative": "MIN_PROFIT_THRESHOLD=0.02 SLIPPAGE_TOLERANCE=100 ts-node scripts/run-bot.ts",
    "bot:aggressive": "MIN_PROFIT_THRESHOLD=0.005 SLIPPAGE_TOLERANCE=300 ts-node scripts/run-bot.ts",
    "bot:testnet": "ARB_RPC=$ARB_SEPOLIA_RPC ENABLE_SIMULATION_MODE=true ts-node scripts/run-bot.ts",
    "bot:sepolia": "ARB_RPC=$ARB_SEPOLIA_RPC OPT_RPC=$OPT_SEPOLIA_RPC ENABLE_SIMULATION_MODE=true ts-node scripts/run-bot.ts",
    "keys:generate": "ts-node scripts/generate-keys.ts",
    "keys:generate-backup": "ts-node scripts/generate-keys.ts --backup",
    "keys:generate-secure": "ts-node scripts/generate-keys.ts --backup --password",
    "keys:validate": "ts-node scripts/validate-setup.ts",
    "keys:validate-quick": "ts-node scripts/validate-setup.ts --quick",
    "setup:wallet": "ts-node scripts/setup-helper.ts wallet",
    "setup:flashbots": "ts-node scripts/setup-helper.ts flashbots",
    "setup:validate": "ts-node scripts/validate-setup.ts",
    "setup:env": "ts-node scripts/setup-helper.ts env",
    "setup:all": "ts-node scripts/setup-helper.ts all",
    "setup": "ts-node scripts/generate-keys.ts",
    "setup:complete": "ts-node scripts/generate-keys.ts --backup && ts-node scripts/validate-setup.ts",
    "setup:quick": "ts-node scripts/quick-setup.ts",
    "setup:interactive": "ts-node scripts/quick-setup.ts",
    "check:ready": "ts-node scripts/check-readiness.ts",
    "monitor:opportunities": "ts-node scripts/monitor-opportunities.ts",
    "monitor:prices": "ts-node scripts/monitor-prices.ts",
    "monitor:gas": "ts-node scripts/monitor-gas.ts",
    "monitor:performance": "ts-node scripts/monitor-performance.ts",
    "simulate:arbitrage": "ts-node scripts/simulate.ts",
    "simulate:triangular": "ENABLE_TRIANGULAR_ARBITRAGE=true ts-node scripts/simulate.ts",
    "simulate:crosschain": "ENABLE_CROSS_CHAIN_MONITORING=true ts-node scripts/simulate.ts",
    "simulate:flashbots": "ts-node scripts/simulate-flashbots.ts",
    "simulate:bundle": "ts-node scripts/simulate-flashbots.ts --bundle",
    "analyze:profits": "ts-node scripts/analyze-profits.ts",
    "analyze:gas": "ts-node scripts/analyze-gas.ts",
    "analyze:performance": "ts-node scripts/analyze-performance.ts",
    "analyze:risks": "ts-node scripts/analyze-risks.ts",
    "fork:arbitrum": "hardhat node --fork $ARB_RPC --fork-block-number $FORK_BLOCK",
    "fork:optimism": "hardhat node --fork $OPT_RPC --fork-block-number $FORK_BLOCK_OPT",
    "fork:mainnet": "hardhat node --fork $MAINNET_RPC --fork-block-number $FORK_BLOCK",
    "fork:test": "hardhat node --fork $ARB_RPC --fork-block-number $FORK_BLOCK",
    "node:arbitrum": "hardhat node --network hardhat_arbitrum",
    "node:optimism": "hardhat node --network hardhat_optimism",
    "node:local": "hardhat node --network localhost",
    "console:arbitrum": "hardhat console --network arbitrum",
    "console:optimism": "hardhat console --network optimism",
    "console:local": "hardhat console --network localhost",
    "lint": "eslint . --ext .ts --fix",
    "lint:check": "eslint . --ext .ts",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "typecheck": "tsc --noEmit",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "security:check": "hardhat check",
    "docs:generate": "typedoc --out docs src",
    "docs:serve": "http-server docs -p 8080",
    "backup:config": "cp .env .env.backup.$(date +%Y%m%d_%H%M%S)",
    "backup:logs": "tar -czf logs_backup_$(date +%Y%m%d_%H%M%S).tar.gz *.log",
    "health:check": "ts-node scripts/health-check.ts",
    "health:monitor": "ts-node scripts/health-monitor.ts",
    "health:alerts": "ts-node scripts/health-alerts.ts",
    "metrics:collect": "ts-node scripts/metrics-collector.ts",
    "metrics:dashboard": "ts-node scripts/metrics-dashboard.ts",
    "metrics:export": "ts-node scripts/metrics-export.ts",
    "update:prices": "ts-node scripts/update-prices.ts",
    "update:gas": "ts-node scripts/update-gas.ts",
    "update:configs": "ts-node scripts/update-configs.ts",
    "emergency:stop": "pkill -f run-bot.ts",
    "emergency:pause": "ts-node scripts/emergency-pause.ts",
    "emergency:resume": "ts-node scripts/emergency-resume.ts",
    "bot:test": "ENABLE_SIMULATION_MODE=true LOG_LEVEL=debug ts-node scripts/run-bot.ts",
    "optimization:test": "MARKET_OPTIMIZATION_ENABLED=true ENABLE_SIMULATION_MODE=true LOG_LEVEL=debug ts-node scripts/run-bot.ts",
    "optimization:status": "ts-node -e \"console.log('Market Optimization Protocol Status: Ready')\"",
    "deploy:all": "npm run deploy:arb && npm run deploy:opt",
    "verify:arbitrum": "hardhat verify --network arbitrum",
    "verify:optimism": "hardhat verify --network optimism",
    "maintenance:daily": "ts-node scripts/daily-maintenance.ts",
    "maintenance:weekly": "ts-node scripts/weekly-optimization.ts",
    "reports:daily": "ts-node scripts/generate-daily-report.ts",
    "setup:production": "ts-node scripts/production-setup.ts",
    "validate:ready": "ts-node scripts/validate-production-ready.ts",
    "production:launch": "ts-node scripts/production-launch.ts",
    "prestart": "npm run compile",
    "pretest": "npm run compile",
    "prepublishOnly": "npm run lint && npm run test",
    "setup:automated": "ts-node scripts/testnet-automation.ts",
    "setup:testnet": "ts-node scripts/testnet-automation.ts",
    "setup:rpc": "ts-node scripts/rpc-harvester.ts",
    "faucet:auto": "ts-node scripts/testnet-automation.ts",
    "deploy:testnet": "ts-node scripts/deploy-testnet.ts",
    "deploy:testnet:arb": "ts-node scripts/deploy-testnet.ts arbitrum-sepolia",
    "deploy:testnet:eth": "ts-node scripts/deploy-testnet.ts ethereum-sepolia",
    "deploy:testnet:opt": "ts-node scripts/deploy-testnet.ts optimism-sepolia",
    "deploy:testnet:skip": "ts-node scripts/deploy-testnet.ts arbitrum-sepolia --skip-setup",
    "test:comprehensive": "npm run setup:rpc && npm run setup:testnet && npm run deploy:testnet && npm run bot:simulate",
    "monitor:testnet": "ts-node scripts/testnet-automation.ts && npm run bot:testnet",
    "gas-funding:setup": "ts-node scripts/gas-funding-manager.ts setup",
    "gas-funding:monitor": "ts-node scripts/gas-funding-manager.ts monitor",
    "gas-funding:status": "ts-node scripts/gas-funding-manager.ts status",
    "gas-funding:adjust": "ts-node scripts/gas-funding-manager.ts adjust",
    "gas-funding:disable": "ts-node scripts/gas-funding-manager.ts disable",
    "withdraw-profits": "ts-node scripts/profit-withdrawal-automation.ts check",
    "withdraw-profits:start": "ts-node scripts/profit-withdrawal-automation.ts start",
    "withdraw-profits:balance": "ts-node scripts/profit-withdrawal-automation.ts balance",
    "withdraw-profits:all": "ts-node scripts/profit-withdrawal-automation.ts withdraw",
    "withdraw-profits:emergency": "ts-node scripts/profit-withdrawal-automation.ts emergency"
  },
  "dependencies": {
    "@aave/core-v3": "^1.19.3",
    "@curvefi/api": "2.68.1",
    "@flashbots/ethers-provider-bundle": "^1.0.0",
    "@flashbots/mev-share-client": "^0.7.13",
    "@gmx-io/sdk": "1.1.2",
    "@nomicfoundation/hardhat-chai-matchers": "^2.1.0",
    "@playwright/test": "^1.54.1",
    "@types/eventsource": "^1.1.15",
    "axios": "^1.7.7",
    "big.js": "^6.2.1",
    "chalk": "^4.1.2",
    "commander": "^11.0.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "ethers": "^6.15.0",
    "express": "^4.18.2",
    "helmet": "^7.1.0",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "node-cron": "^3.0.2",
    "pino": "^8.15.0",
    "playwright": "^1.54.1",
    "playwright-extra": "^4.3.6",
    "prom-client": "^15.1.3",
    "puppeteer-extra-plugin-stealth": "^2.11.2",
    "rate-limiter-flexible": "^7.1.1",
    "redis": "^4.6.10",
    "symbiosis-js-sdk": "^3.5.7",
    "winston": "^3.11.0",
    "ws": "^8.14.2"
  },
  "devDependencies": {
    "@nomicfoundation/hardhat-ethers": "^3.1.0",
    "@openzeppelin/contracts": "^4.9.3",
    "@typechain/ethers-v6": "^0.5.1",
    "@typechain/hardhat": "^9.1.0",
    "@types/big.js": "^6.2.0",
    "@types/chai": "^4.3.6",
    "@types/compression": "^1.7.3",
    "@types/cors": "^2.8.15",
    "@types/express": "^4.17.17",
    "@types/lodash": "^4.14.199",
    "@types/mocha": "^10.0.2",
    "@types/node": "^20.8.0",
    "@types/node-cron": "^3.0.11",
    "@types/ws": "^8.5.6",
    "@typescript-eslint/eslint-plugin": "^6.7.4",
    "@typescript-eslint/parser": "^6.7.4",
    "chai": "^4.3.10",
    "chai-as-promised": "^8.0.1",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "hardhat": "^2.19.0",
    "hardhat-chai-matchers": "^0.0.1",
    "hardhat-contract-sizer": "^2.10.0",
    "hardhat-deploy": "^0.11.45",
    "hardhat-etherscan": "^1.0.1",
    "hardhat-gas-reporter": "^1.0.9",
    "http-server": "^14.1.1",
    "mocha": "^10.2.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.0.3",
    "solidity-coverage": "^0.8.5",
    "ts-node": "^10.9.1",
    "typechain": "^8.3.2",
    "typedoc": "^0.25.2",
    "typescript": "^5.2.2"
  },
  "keywords": [
    "arbitrage",
    "flash-loan",
    "mev",
    "flashbots",
    "ethereum",
    "layer2",
    "arbitrum",
    "optimism",
    "defi",
    "trading",
    "cryptocurrency",
    "blockchain",
    "web3"
  ],
  "author": "Enhanced MEV Bot Team",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/username/enhanced-mev-arbitrage-bot.git"
  },
  "bugs": {
    "url": "https://github.com/username/enhanced-mev-arbitrage-bot/issues"
  },
  "homepage": "https://github.com/username/enhanced-mev-arbitrage-bot#readme",
  "overrides": {
    "form-data": "^4.0.1",
    "bigint-buffer": "^1.1.5",
    "cookie": "^0.7.2"
  }
}
